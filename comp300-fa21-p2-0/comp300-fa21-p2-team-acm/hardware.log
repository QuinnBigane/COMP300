
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4081 (git sha1 261383d, clang 12.0.0-1ubuntu1 -fPIC -Os)


-- Parsing `top.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: top.v
Parsing Verilog input from `top.v' to AST representation.
Generating RTLIL representation for module `\top'.
Warning: reg '\hex2Display' is assigned in a continuous assignment at top.v:37.12-37.37.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -json hardware.json' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Finding top of design hierarchy..
root of   0 design levels: top                 
Automatically selected top as design top module.

2.2.2. Analyzing design hierarchy..
Top module:  \top

2.2.3. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$249 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1290$242 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$238 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1159$231 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1090$228 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1042$225 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:973$222 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:925$219 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$211 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:713$204 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$200 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:582$193 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:513$190 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:465$187 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:396$184 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:348$181 in module SB_DFFSR.
Removed 1 dead cases from process $proc$top.v:72$6 in module top.
Marked 1 switch rules as full_case in process $proc$top.v:72$6 in module top.
Marked 1 switch rules as full_case in process $proc$top.v:57$2 in module top.
Removed a total of 1 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 28 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$252'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$248'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$241'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$237'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$230'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$227'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$224'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$221'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$218'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$214'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$203'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$199'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$192'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$189'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$186'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$183'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$180'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$178'.
  Set init value: \Q = 1'0
Found init rule in `\top.$proc$top.v:0$8'.
  Set init value: \second_timer_state = 24'101101110001101011111111
  Set init value: \second = 16'1010110011011000

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$249'.
Found async reset \R in `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$238'.
Found async reset \S in `\SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1090$228'.
Found async reset \R in `\SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:973$222'.
Found async reset \S in `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$211'.
Found async reset \R in `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$200'.
Found async reset \S in `\SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:513$190'.
Found async reset \R in `\SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:396$184'.

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$252'.
Creating decoders for process `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$249'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$248'.
Creating decoders for process `\SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1290$242'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$241'.
Creating decoders for process `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$238'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$237'.
Creating decoders for process `\SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1159$231'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$230'.
Creating decoders for process `\SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1090$228'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$227'.
Creating decoders for process `\SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1042$225'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$224'.
Creating decoders for process `\SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:973$222'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$221'.
Creating decoders for process `\SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:925$219'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$218'.
Creating decoders for process `\SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:882$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Creating decoders for process `\SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:846$215'.
Creating decoders for process `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$214'.
Creating decoders for process `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:713$204'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$203'.
Creating decoders for process `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$200'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$199'.
Creating decoders for process `\SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:582$193'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$192'.
Creating decoders for process `\SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:513$190'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$189'.
Creating decoders for process `\SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:465$187'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$186'.
Creating decoders for process `\SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:396$184'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$183'.
Creating decoders for process `\SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:348$181'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$180'.
Creating decoders for process `\SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:305$179'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Creating decoders for process `\SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:269$177'.
Creating decoders for process `\top.$proc$top.v:0$8'.
Creating decoders for process `\top.$proc$top.v:27$7'.
Creating decoders for process `\top.$proc$top.v:72$6'.
     1/1: $1\seg[6:0]
Creating decoders for process `\top.$proc$top.v:57$2'.
     1/2: $1\second[15:0]
     2/2: $1\second_timer_state[23:0]

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.\rgb' from process `\top.$proc$top.v:27$7'.
No latch inferred for signal `\top.\seg' from process `\top.$proc$top.v:72$6'.

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$249'.
  created $adff cell `$procdff$456' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1290$242'.
  created $dff cell `$procdff$457' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$238'.
  created $adff cell `$procdff$458' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1159$231'.
  created $dff cell `$procdff$459' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1090$228'.
  created $adff cell `$procdff$460' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1042$225'.
  created $dff cell `$procdff$461' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:973$222'.
  created $adff cell `$procdff$462' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:925$219'.
  created $dff cell `$procdff$463' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:882$217'.
  created $dff cell `$procdff$464' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:846$215'.
  created $dff cell `$procdff$465' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$211'.
  created $adff cell `$procdff$466' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:713$204'.
  created $dff cell `$procdff$467' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$200'.
  created $adff cell `$procdff$468' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:582$193'.
  created $dff cell `$procdff$469' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:513$190'.
  created $adff cell `$procdff$470' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:465$187'.
  created $dff cell `$procdff$471' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:396$184'.
  created $adff cell `$procdff$472' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:348$181'.
  created $dff cell `$procdff$473' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:305$179'.
  created $dff cell `$procdff$474' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:269$177'.
  created $dff cell `$procdff$475' with positive edge clock.
Creating register for signal `\top.\second_timer_state' using process `\top.$proc$top.v:57$2'.
  created $dff cell `$procdff$476' with positive edge clock.
Creating register for signal `\top.\second' using process `\top.$proc$top.v:57$2'.
  created $dff cell `$procdff$477' with positive edge clock.

2.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$252'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$249'.
Removing empty process `SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$249'.
Removing empty process `SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$248'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1290$242'.
Removing empty process `SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1290$242'.
Removing empty process `SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$241'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$238'.
Removing empty process `SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$238'.
Removing empty process `SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$237'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1159$231'.
Removing empty process `SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1159$231'.
Removing empty process `SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$230'.
Removing empty process `SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1090$228'.
Removing empty process `SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$227'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1042$225'.
Removing empty process `SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1042$225'.
Removing empty process `SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$224'.
Removing empty process `SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:973$222'.
Removing empty process `SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$221'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:925$219'.
Removing empty process `SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:925$219'.
Removing empty process `SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$218'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:882$217'.
Removing empty process `SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:882$217'.
Removing empty process `SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Removing empty process `SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:846$215'.
Removing empty process `SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$214'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$211'.
Removing empty process `SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$211'.
Removing empty process `SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:713$204'.
Removing empty process `SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:713$204'.
Removing empty process `SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$203'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$200'.
Removing empty process `SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$200'.
Removing empty process `SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$199'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:582$193'.
Removing empty process `SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:582$193'.
Removing empty process `SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$192'.
Removing empty process `SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:513$190'.
Removing empty process `SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$189'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:465$187'.
Removing empty process `SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:465$187'.
Removing empty process `SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$186'.
Removing empty process `SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:396$184'.
Removing empty process `SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$183'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:348$181'.
Removing empty process `SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:348$181'.
Removing empty process `SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$180'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:305$179'.
Removing empty process `SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:305$179'.
Removing empty process `SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Removing empty process `SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:269$177'.
Removing empty process `top.$proc$top.v:0$8'.
Removing empty process `top.$proc$top.v:27$7'.
Found and cleaned up 1 empty switch in `\top.$proc$top.v:72$6'.
Removing empty process `top.$proc$top.v:72$6'.
Found and cleaned up 1 empty switch in `\top.$proc$top.v:57$2'.
Removing empty process `top.$proc$top.v:57$2'.
Cleaned up 20 empty switches.

2.4. Executing FLATTEN pass (flatten design).

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3 debug messages>

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

2.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.10.6. Executing OPT_DFF pass (perform DFF optimizations).

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.9. Finished OPT passes. (There is nothing left to do.)

2.11. Executing FSM pass (extract and optimize FSM).

2.11.1. Executing FSM_DETECT pass (finding FSMs in design).

2.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

2.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$477 ($dff) from module top (D = $add$top.v:0$4_Y [15:0], Q = \second).
Adding SRST signal on $procdff$476 ($dff) from module top (D = $sub$top.v:63$5_Y [23:0], Q = \second_timer_state, rval = 24'101101110001101011111111).

2.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

2.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.9. Rerunning OPT passes. (Maybe there is more to do..)

2.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

2.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.13. Executing OPT_DFF pass (perform DFF optimizations).

2.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.16. Finished OPT passes. (There is nothing left to do.)

2.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell top.$add$top.v:0$4 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$add$top.v:0$4 ($add).
Removed top 31 bits (of 32) from port B of cell top.$sub$top.v:63$5 ($sub).
Removed top 8 bits (of 32) from port Y of cell top.$sub$top.v:63$5 ($sub).
Removed top 1 bits (of 4) from port B of cell top.$procmux$442_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$procmux$443_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$procmux$444_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$procmux$445_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$procmux$446_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$procmux$447_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$procmux$448_CMP0 ($eq).
Removed top 16 bits (of 32) from wire top.$add$top.v:0$4_Y.
Removed top 8 bits (of 32) from wire top.$sub$top.v:63$5_Y.

2.14. Executing PEEPOPT pass (run peephole optimizers).

2.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.16. Executing SHARE pass (SAT-based resource sharing).

2.17. Executing TECHMAP pass (map to technology primitives).

2.17.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

2.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$top.v:0$4 ($add).
  creating $macc model for $sub$top.v:63$5 ($sub).
  creating $alu model for $macc $sub$top.v:63$5.
  creating $alu model for $macc $add$top.v:0$4.
  creating $alu cell for $add$top.v:0$4: $auto$alumacc.cc:485:replace_alu$483
  creating $alu cell for $sub$top.v:63$5: $auto$alumacc.cc:485:replace_alu$486
  created 2 $alu and 0 $macc cells.

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

2.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.6. Executing OPT_DFF pass (perform DFF optimizations).

2.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.9. Finished OPT passes. (There is nothing left to do.)

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

2.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

2.25.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.27.3. Executing OPT_DFF pass (perform DFF optimizations).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

2.27.5. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.6. Executing OPT_DFF pass (perform DFF optimizations).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.9. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/techmap.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$c9511eeb847f2aa95252b1013477609463f67ee0\_80_ice40_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$bf9a6aad4c9603c218b6b0be41de41e6ed43614c\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
No more expansions possible.
<suppressed ~173 debug messages>

2.32. Executing OPT pass (performing simple optimizations).

2.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~380 debug messages>

2.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~183 debug messages>
Removed a total of 61 cells.

2.32.3. Executing OPT_DFF pass (perform DFF optimizations).

2.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 36 unused cells and 186 unused wires.
<suppressed ~37 debug messages>

2.32.5. Finished fast OPT passes.

2.33. Executing ICE40_OPT pass (performing simple optimizations).

2.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$483.slice[0].carry: CO=\second [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$486.slice[0].carry: CO=\second_timer_state [0]

2.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.4. Executing OPT_DFF pass (perform DFF optimizations).

2.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.6. Rerunning OPT passes. (Removed registers in this run.)

2.33.7. Running ICE40 specific optimizations.

2.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.10. Executing OPT_DFF pass (perform DFF optimizations).

2.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.12. Finished OPT passes. (There is nothing left to do.)

2.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
No more expansions possible.
<suppressed ~62 debug messages>

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$483.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$486.slice[0].carry ($lut).

2.38. Executing ICE40_OPT pass (performing simple optimizations).

2.38.1. Running ICE40 specific optimizations.

2.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~37 debug messages>

2.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~129 debug messages>
Removed a total of 43 cells.

2.38.4. Executing OPT_DFF pass (perform DFF optimizations).

2.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 250 unused wires.
<suppressed ~1 debug messages>

2.38.6. Rerunning OPT passes. (Removed registers in this run.)

2.38.7. Running ICE40 specific optimizations.

2.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.38.10. Executing OPT_DFF pass (perform DFF optimizations).

2.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.38.12. Finished OPT passes. (There is nothing left to do.)

2.39. Executing TECHMAP pass (map to technology primitives).

2.39.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.40. Executing ABC pass (technology mapping using ABC).

2.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 156 gates and 216 wires to a netlist network with 59 inputs and 58 outputs.

2.40.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =      58.
ABC: Participating nodes from both networks       =     122.
ABC: Participating nodes from the first network   =      57. (  86.36 % of nodes)
ABC: Participating nodes from the second network  =      65. (  98.48 % of nodes)
ABC: Node pairs (any polarity)                    =      57. (  86.36 % of names can be moved)
ABC: Node pairs (same polarity)                   =      57. (  86.36 % of names can be moved)
ABC: Total runtime =     0.01 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       65
ABC RESULTS:        internal signals:       99
ABC RESULTS:           input signals:       59
ABC RESULTS:          output signals:       58
Removing temp directory.

2.41. Executing ICE40_WRAPCARRY pass (wrap carries).

2.42. Executing TECHMAP pass (map to technology primitives).

2.42.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 52 unused cells and 183 unused wires.

2.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:       77
  1-LUT               36
  2-LUT               26
  3-LUT                1
  4-LUT               14

Eliminating LUTs.
Number of LUTs:       77
  1-LUT               36
  2-LUT               26
  3-LUT                1
  4-LUT               14

Combining LUTs.
Number of LUTs:       59
  1-LUT               18
  2-LUT               26
  3-LUT                1
  4-LUT               14

Eliminated 0 LUTs.
Combined 18 LUTs.
<suppressed ~455 debug messages>

2.44. Executing TECHMAP pass (map to technology primitives).

2.44.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.44.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$ff10621ff350133ce54c2c9c3516ef034e8cfe58\$lut for cells of type $lut.
Using template $paramod$2112bf40eb7c906066b9d56987c1556b67abb664\$lut for cells of type $lut.
Using template $paramod$78958aa8020fd4e414c080f806648764b4326ae4\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$c046eda4be3b37fd59902c809565dd48b717f5d3\$lut for cells of type $lut.
Using template $paramod$a4026eebe32089c4bad060da77b9417980e166a4\$lut for cells of type $lut.
Using template $paramod$3d237da2a1474ba8bfbb62849e20c86f23852658\$lut for cells of type $lut.
Using template $paramod$82fb117d936d9886851f9be74390335b4bcdf1f9\$lut for cells of type $lut.
Using template $paramod$8788aafc86f44b02d08105487887b18f4da92602\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~257 debug messages>
Removed 0 unused cells and 129 unused wires.

2.45. Executing AUTONAME pass.
Renamed 1232 objects in module top (22 iterations).
<suppressed ~147 debug messages>

2.46. Executing HIERARCHY pass (managing design hierarchy).

2.46.1. Analyzing design hierarchy..
Top module:  \top

2.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.47. Printing statistics.

=== top ===

   Number of wires:                 46
   Number of wire bits:            214
   Number of public wires:          46
   Number of public wire bits:     214
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                111
     SB_CARRY                       24
     SB_DFFE                         4
     SB_DFFSR                       24
     SB_LUT4                        59

2.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.49. Executing JSON backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: eb9a693572, CPU: user 1.46s system 0.16s, MEM: 55.71 MB peak
Yosys 0.9+4081 (git sha1 261383d, clang 12.0.0-1ubuntu1 -fPIC -Os)
Time spent: 26% 11x read_verilog (0 sec), 25% 1x abc (0 sec), ...
